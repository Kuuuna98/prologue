name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  deploy: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Spring Boot Build
      run: |
        cd ./backend/prologue
        chmod +x gradlew
        ./gradlew clean build --exclude-task test
    
    - name: docker image build
      run: |
        cd ./backend/prologue
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_BACKEND_NAME }} .
    
    - name: docker login 
      uses: docker/login-action@v2
      with: 
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: docker Hub push
      run: |
        cd ./backend/prologue
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_BACKEND_NAME }}

    # GET GitHub IP (5)
    - name: get GitHub IP 
      id: ip
      uses: haythem/public-ip@v1.2

    # Configure AWS Credentials (6) - AWS 접근 권한 취득(IAM)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
         aws-region: ${{ secrets.AWS_REGION }}

    # - name: Add Github Actions IP to Security group
    #   run: |
    #     aws ec2 authorize-security-group-ingress \
    #     --group-id ${{ secrets.AWS_SG_ID }} \
    #     --protocol tcp --port 22 \
    #     --cidr ${{ steps.ip.outputs.ipv4 }}/32
    
    # AWS EC2 Server Connect & Docker 명령어 실행 (8)
    - name: AWS EC2 Connection
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }} 
        password: ${{ secrets.EC2_PASSWORD }} 
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: 60s
        script: |
          sudo docker stop ${{ secrets.DOCKERHUB_BACKEND_NAME }}
          sudo docker rm ${{ secrets.DOCKERHUB_BACKEND_NAME }}
          sudo docker run -it -d -p 8080:8080 --name ${{ secrets.DOCKERHUB_BACKEND_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_BACKEND_NAME }}
    
    # # REMOVE Github IP FROM security group (9)
    # - name: Remove IP FROM security group
    #   run: |
    #     aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
    
